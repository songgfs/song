第一天，开发环境；Java基本语法，变量，数据类型，流程控制。

1，检查环境
a,JDK环境检查    java -version
b,配置环境变量   path   JAVA_HOME

2,数据类型
分为 基本数据类型和引用数据类型
基本数据类型  8种  数值 byte,short,int,long,float ,double 字符 char  布尔 boolean
应用数据类型  数组，类，接口，注解，枚举

基本类型转换，自动转换和强制转换

从低精度往高精度能够自动转换，反之需要强制转换

为什么需要数据类型？描述待解决的问题。
为了设计解决问题相关的算法（逻辑），就需要运算符和控制语句。

流程控制  if-else，for，while，do-while , switch

运算符

算数运算符，+  -  *  /  %  ++  --
比较运算符， < <= > >= ==
逻辑运算符，&& & || |  !
位运算符，>>  <<
赋值运算符， =  += -= *=  /=


任务，学生具有性别，年龄两个属性（参数），要求循环输入学生信息，分别统计男生，女生的平均年龄。

作业1，统计某科考试成绩不及格，及格的学生人数。要求循环输入多个考生成绩。

作业2，预习回答String，StringBuffer，StringBuilder之间的异同点。

作业3，有如下一段英文段落，统计词频最高的单词，并输出该词及其频率。
A Scanner breaks its input into tokens using a delimiter pattern, which by default matches whitespace. The resulting tokens may then be converted into values of different types using the various next methods. 

第二天，数组，字符串

数组，具有相同数据类型的一组数据，且数组的大小一旦定义之后，不可改变。通过下标来访问数组元素。下标是从0开始到数组大小-1结束。在Java中，数组不允许越界访问。

String字符串是不可变的。常用方法，charAt，compareTo，getBytes，indexOf，length，replace，split，statsWith, endsWith, substring, toUpperCase, toLowerCase, trim

StringBuffer ,StringBuilder 都是可变字符串，单线程环境下，StringBuilder的效率要比StringBuffer好
StringBuilder是非线程安全的。StringBuffer是线程安全的，用户多线程环境下。

包装类：

byte    Byte
short   Short
int     Integer
long    Long
char    Character
float   Float
double  Double
boolean Boolean

主要作用是方便字符串与基本类型之间的转换，以及基本类型与包装类型之间的转换（自动转换-拆装箱）auto-boxing


日期，java.util.Date类型。
日期格式化，DateFormat，SimpleDateFormat


作业1，用户注册需要输入密码，密码长度必须在6-12位之间，需要有大写字母和数字，否则提示用户密码安全级别低，不符合要求。

作业2，用户完善个人资料时，需要根据指定格式（例如1991-09-08）提供自己的出生年月日，系统把该字符串转换成日期对象，并验证该日期必须早于当前日期。


第三天，面向对象编程

1，类和对象、构造方法、实例化

面向对象编程是按照人类思维方式来描述问题的，而面向过程编程是按照计算机体系结构来描述问题的。当软件系统业务非常复杂，软件规模较大时，面向对象编程更能够管理好软件系统的开发过程。

类-指的就是类型和分类，具有相同属性（特性）和行为的对象的集合抽象。类是这些对象提炼的概念。面向对象编程提供自定义类的机制，用来精确地描述现实问题。

封装：通过私有化类的属性


构造方法/函数,构造器（Constructor），作用是初始化对象。构造方法，名字必须与类名相同，不允许有返回值声明。当没有自定义有参构造方法时，编译器（javac）会在编译源程序时，自动添加无参构造方法。


继承，描述类与类之间的关系的，继承分父类和子类，子类继承自父类。同一类别，是属于关系（IS-A）


方法重载和重写

方法的重写指的是在有继承的前提下，子类对父类的方面进行重新实现。
在类内部，存在同名方法，但是参数不一样。这个现象就是重载

作业：自行复习接口，并用自己的话描述接口和抽象类的区别。

接口，是一种规范，实现接口就相当于遵循规范（协议）。


面向接口编程


集合框架

List    容量可变的线性结构，ArrayList、LinkedList
Set     集合  HashSet 、TreeSet，二者均不允许存在重复元素，HashSet数据是无序的，TreeSet是有序的
TreeSet的排序取决于元素的compareTo方法实现
Map     映射（对应）关系 ，(key-value) 键值对，HashMap，TreeMap，Hashtable，Properties


异常

错误分为，
静态编译错误，是语法层面的。
程序运行过程中报出的错误（运行时异常）。
逻辑错误，程序既没有编译错误，也没有运行时异常，但是运行结果不是预期的结果（一般需要给程序打断点进行调试才能解决）

常见异常：
NullPointerException  -- 当一个变量（引用类型）的值为null，却被调用了属性或者方法。


Java本身提供了丰富的异常供我们编程使用。异常发生，如果不被处理将会导致程序异常终止（崩溃，闪退）。如果软件系统存在内置异常不够用的情况，我们可以自定义异常。

文件及其操作

文件操作时通过IO类库来完成的，输入操作使用InputStream，输出操作使用OutputStream


作业1，设计银行存取款业务，创建多个账户对象，利用循环随机调用这些账户中的一个进行取款操作，并且把存款行为记录在文件当中。例如
账户：111111，2017-06-08 17:36:40  取款 2000元失败，余额只有500。
账户：111111，2017-06-08 17:36:40  取款 2000元。
账户：111111，2017-06-08 17:36:40  取款 2000元。
账户：111111，2017-06-08 17:36:40  取款 2000元。


分析问题
1，先把名词和动词分析出来，名词定义成只有属性和get/set方法的类（实体类）；把多个动词定义成多个函数，这些函数组成一个类（业务类）。然后来判定这些词是否跟软件系统有关系（确定范围）

账户
存款，取款


多线程编程
多线程就是为了充分利用CPU资源，让程序执行效率得到提高。

什么是线程，什么是源程序，可执行程序（操作系统管理-进程管理/文件系统），在程序没有运行（执行指令被操作系统载入内存（进程），并做进程调度（获得CPU的执行权）之前是静止的。

CUP在执行程序指令的时候，会分好几条执行线路，一条执行线路就是一个线程。


Thread 代表了线程，其中run方法就是该线程的执行线路。

作业1，某电商网站举行促销活动（秒杀），一款促销商品总数量是30件，循环创建50个线程对象模拟用户秒杀行为。要求保证商品数量的正确性，直至秒完为止，有20线程是秒杀失败的。输出秒杀成功和失败的信息。


网络编程

ServerSocket，Socket（套接字）

ServerSocket，服务器端，地址，端口


MySQL数据库

mysql -u root -p


show databases;  --查看所有的数据库列表

create database db1401;  --创建名称为db1401的数据库

use db1401;  -- 切换当前数据库到db1401，以便进行数据操作

show tables; -- 查看当前数据库所有的表

创建表
create table  stu_1401 (
id     int     primary key ,
name   varchar(50) ,  -- varchar变长字符串
sex    char(1)        -- char 固定长度的
);

查看表结构
desc  stu_1401;

删除表
drop table stu_1401;

修改表
删除表中的id列
alter table stu_1401 drop id;
往表中添加一列
alter table stu_1401 add id int primary key auto_increment;
修改表，让auto_increment的初始值从1000开始（默认从1开始）
alter table stu_1401 auto_increment=1000;



添加数据
insert into stu_1401 (id,name,sex) values (1000,'白迪博','男');

查询数据
查询一部分列的数据
select id,name from stu_1401;
查询所有列数据
select * from stu_1401;
查询所有女生的信息

select * from stu_1401 where sex = '女';

多表查询

链接查询，内连接，左外连接，右外连接

t_students,t_classes
问题，1班学生信息。
select s.id,s.name,s.sex,s.cid,c.cname from t_students s inner join t_classes c on s.cid = c.id
where c.id=1;
内连接是在笛卡尔积的基础之上，利用连接条件（on s.cid = c.id) 进行数据匹配。通过where过滤数据
以达到问题的要求。

问题，所有学生及其班级信息。
因为学生表里存在未分配班级的学生数据，因此，使用内连接达不到要求。需要使用外连接，



删除数据
删除表里面所有数据
delete from stu_1401;
truncate table stu_1401;


修改数据
修改某列的所有值
update stu_1401 set sex='女';
修改某列的部分值
update stu_1401 set sex='男' where id=1000;


Java操作数据库

常见的数据库，MicroSoft SQL Server，Oracle Oracle ，IBM DB2，MySQL，Sybase  Sybase Server

Sun  Java 制定了JDBC编程规范，能够屏蔽多种数据库函数库的差异，让Java程序员嗨皮起来。
数据库厂商会遵循JDBC规范，提供一个java库文件（jar），使得Java程序可以给予JDBC类库访问自己
的数据库产品。


JDBC API
DriverManager  工具类，可以创建连接对象。
Connection     数据库连接接口，负责应用程序与数据库服务器的通信

Statement/PreparedStatement  SQL语句接口，负责执行SQL语句的（CRUD，增删改查）

ResultSet     数据结果集合，负责封装，访问查询结果（虚拟表）。

开发步骤：
1,加载JDBC驱动。点名谁来干活。
2,建立数据库的连接。铺路
  DriverManager，JDBC驱动管理器，以来每个数据库驱动的URL来进行管理
3,定义SQL语句，并且使用Statement语句对象执行SQL语句
4,处理数据
  通过next方法可以向下移动结果集的行标，定位某行(row)数据
5，关闭数据库连接，释放资源


作业1，新建设备数据库（db_equips）,建立设备数据表（t_equipments)，设备具备（编号，名称，在线状态，上线时间，下线时间）等属性。编写控制台程序，列出所有设备的编号，名称和状态。通过选择操作（上线，下线）能够设备进行操作。

1000，智能灯1，在线
1001，智能灯2，下线
1002，智能灯1，在线




请选择操作（1，上线   2，下线）：1 1001
智能灯2上线成功。

提示，上线、下线操作即是修改数据库中设备的在线状态。程序需要实现一个查询语句查询所有设备，
需要实现一个更新语句改变指定的设备状态。


Web 应用程序开发   Java Web  , ASP.NET, PHP , Python

JSP,Servlet原生的开发技术  Struts2 x，Spring MVC  框架技术

JSP，Java Server Pages，是Java技术体系中，用户生成动态网页内容的技术

Web应用程序目录结构

day08
+---------WEB-INF
             +-------classes   存放编译后的class（字节码）文件
             +-------lib       存放打包库文件（jar）
             --------web.xml   web应用的配置文件（部署描述符）

JSP首先会被翻译（jspc）成Java文件，在被编译（javac）成class文件，最终被JVM执行。

JSP的组成
1，指令  <%@ page 参数...%>，page，include，taglib, 是在JSP源文件翻译成Java源文件期间工作的。
2，Scriptlet  <% %>
3, 声明  <%! %>
4,表达式 <%= %>

内置对象
request  浏览器通过（地址栏回车，超链接，提交按钮）会向Web服务器发送一个请求，按照HTTP协议的定义组织请求数据（协议数据，用户数据），服务器接收这些数据，并且封装成request内置对象，供编程使用。
response 服务器接收到浏览器的资源（静态资源，动态资源）请求，会执行相关的程序逻辑，会向浏览器做出响应（应答），响应的内容（静态资源：html页面，图片，css，js；指令：重定向（跳转）指令）。

HTTP协议规定，服务器响应结束，浏览器和服务器之间的通信链路立刻断开，以便提高服务器的通信效率和通信吞吐量。这个特性（无状态）导致服务器，无法识别浏览器的历史数据和行为。但是，许多业务（购物过程）是需要保留请求的历史数据（购物车），为了解决无法保留历史数据的这个问题。提出了浏览器和服务器之间的会话技术。会话技术，在浏览器和服务器交的每次请求-响应期间，携带浏览器的唯一标识来实现。
session

Servlet（服务器端用户处理请求的Java程序） 
1，创建Servlet
2，配置Servlet   
       
JSP + JavaBean   Model I
JSP+Servlet+JavaBean  Model II    MVC  M--Model(EquipmentService)   V--View(JSP)   C--Controller(Servlet)

JSON  -- JavaScript Object Notation
{"property1":value1,"property2":value2, ... ,"propertN":function(){}}
属性名称需要使用双引号括起来

在服务器端组装符合JSON语法规范的字符串，发送给浏览器，浏览器端使用JQuery的parseJSON函数进行解析后，即可当成JS对象使用。



5000 ~ 8000
10个月 4个月






